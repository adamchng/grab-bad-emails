#!/usr/bin/perl

# adam 20040902 Perl script to grab bad emails from /var/mail/root file.
# dump them to a file and use php script to remove them from CRM database.



	$filename = '/var/mail/root';
        $output = '/tmp/bad_emails.txt';
	open(FL,"$filename");
        open(OUT,">>$output");

	while(<FL>) {
		chomp $_;
		if(/User unknown/ig) {

			if($_ =~ /([^@<\s]+@[-a-z0-9]+\.[a-z]{2,})/i) {
				#print "$1\n";
				$emails{$1} = $1;
			}

		}
	}
	close FL;

	foreach $a (keys(%emails)) {
		chomp;
		print OUT "$a\n";
	}
	close OUT;


        # ---------- run php script and dump into database -------------
        system("/usr/bin/GET http://w3.netcominfo.com/crm/fix_bad_emails.php");

        # ------ delete bad email data file ----------------------
        unlink("$output");

	exit;





# for future use if needed

sub validate_email_address {
    my $addr_to_check = shift;
    $addr_to_check =~ s/("(?:[^"\\]|\\.)*"|[^\t "]*)[ \t]*/$1/g;
    
    my $esc         = '\\\\';
    my $space       = '\040';
    my $ctrl        = '\000-\037';
    my $dot         = '\.';
    my $nonASCII    = '\x80-\xff';
    my $CRlist      = '\012\015';
    my $letter      = 'a-zA-Z';
    my $digit       = '\d';
    
    my $atom_char   = qq{ [^$space<>\@,;:".\\[\\]$esc$ctrl$nonASCII] };
    my $atom        = qq{ $atom_char+ };
    my $byte        = qq{ (?: 1?$digit?$digit | 
                              2[0-4]$digit    | 
                              25[0-5]         ) };
    
    my $qtext       = qq{ [^$esc$nonASCII$CRlist"] };
    my $quoted_pair = qq{ $esc [^$nonASCII] };
    my $quoted_str  = qq{ " (?: $qtext | $quoted_pair )* " };
    
    my $word        = qq{ (?: $atom | $quoted_str ) };
    my $ip_address  = qq{ \\[ $byte (?: $dot $byte ){3} \\] };
    my $sub_domain  = qq{ [$letter$digit]
                          [$letter$digit-]{0,61} [$letter$digit]};
    my $top_level   = qq{ (?: $atom_char ){2,4} };
    my $domain_name = qq{ (?: $sub_domain $dot )+ $top_level };
    my $domain      = qq{ (?: $domain_name | $ip_address ) };
    my $local_part  = qq{ $word (?: $dot $word )* };
    my $address     = qq{ $local_part \@ $domain };
    
    return $addr_to_check =~ /^$address$/ox ? $addr_to_check : "";
}


